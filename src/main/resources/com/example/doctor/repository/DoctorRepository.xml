<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.doctor.repository.DoctorRepository">

    <resultMap id="doctorResultMap" type="com.example.doctor.entity.Doctor">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="detail" column="detail"/>
        <collection property="positions">
            <result column="position"/>
        </collection>
        <collection property="hospitals">
            <result column="hospital"/>
        </collection>
        <collection property="departments">
            <result column="department"/>
        </collection>
    </resultMap>

    <sql id="baseQuery">
        SELECT d.id, d.username, d.detail,
            GROUP_CONCAT(h.hospital) AS hospitals,
            GROUP_CONCAT(p.position) AS positions,
            GROUP_CONCAT(dep.department) AS departments
        FROM doctors d
        LEFT JOIN doctor_hospitals dh ON d.id = dh.doctor_id
        LEFT JOIN hospitals h ON dh.hospital_id = h.id
        LEFT JOIN doctor_positions dp ON d.id = dp.doctor_id
        LEFT JOIN positions p ON dp.position_id = p.id
        LEFT JOIN doctor_department dd ON d.id = dd.doctor_id
        LEFT JOIN departments dep ON dd.department_id = dep.id
    </sql>

    <select id="findById" resultMap="doctorResultMap">
        <include refid="baseQuery"/>
        WHERE d.id = #{id}
        GROUP BY d.id, d.username, d.detail, h.hospital, p.position
    </select>

    <select id="findAll" resultMap="doctorResultMap">
        <include refid="baseQuery"/>
        GROUP BY d.id, d.username, d.detail, h.hospital, p.position
    </select>

    <select id="getDoctors" resultMap="doctorResultMap">
        SELECT d.id, d.username, d.detail,
        GROUP_CONCAT(h.hospital) AS hospitals,
        GROUP_CONCAT(p.position) AS positions,
        GROUP_CONCAT(dep.department) AS departments
        FROM doctors d
        LEFT JOIN doctor_hospitals dh ON d.id = dh.doctor_id
        LEFT JOIN hospitals h ON dh.hospital_id = h.id
        LEFT JOIN doctor_positions dp ON d.id = dp.doctor_id
        LEFT JOIN positions p ON dp.position_id = p.id
        LEFT JOIN doctor_department dd ON d.id = dd.doctor_id
        LEFT JOIN departments dep ON dd.department_id = dep.id
        ORDER BY id ASC
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countDoctors" resultType="long">
        SELECT COUNT(*) FROM doctors
    </select>

</mapper>